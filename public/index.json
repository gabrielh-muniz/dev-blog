[{"content":"Links setInterval() Description This project is a dynamic progress bar implemented using HTML, CSS and JavaScript. The goal of this project is to train how to schedule an execution. For this project I use a function call setInterval. It allows us to run a function repeatedly.\nSource Code HTML \u0026lt;div class=\u0026#34;progress-bar\u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;progress-value\u0026#34;\u0026gt;0\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; CSS *, *::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } body { height: 100vh; display: flex; align-items: center; justify-content: center; } .progress-bar { position: relative; width: 245px; height: 245px; display: flex; align-items: center; justify-content: center; border-radius: 50%; background: conic-gradient(#7d2ae8 0deg, #ededed 0deg); } .progress-bar::before { content: \u0026#34;\u0026#34;; position: absolute; width: 225px; height: 225px; border-radius: 50%; background-color: #fff; } .progress-value { position: relative; font-size: 3rem; font-family: monospace; } JavaScript const progress = document.querySelector(\u0026#39;.progress-bar\u0026#39;) const progressValue = document.querySelector(\u0026#39;.progress-value\u0026#39;) const progressLength = 100 let progressCount = 0 let dist = 0 let intervalId = setInterval(() =\u0026gt; { progressCount++ progressValue.innerText = `${progressCount}%` progress.style.background = `conic-gradient(#7d2ae8 ${progressCount * 3.6}deg, #ededed 0deg)` if (progressCount == progressLength) { progressCount = 0 } }, 50) ","permalink":"/projects/radial-progress-bar/","summary":"This project involves creating a dynamic progress bar using HTML, CSS, and JavaScript.","title":"Radial Progress Bar"}]