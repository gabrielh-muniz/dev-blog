[{"content":"Description Guess the Number is a fun game where players try to guess a hidde number generated by the computer. The goal is to guess the corret number within a specified range (e.g., 1 to 10) in as few attempts as possible. With each guess, the game provides feedback indicating the number of tries and a list of tried numbers. It\u0026rsquo;s great for a beginner project to practice HTML, CSS and JavaScript.\nHow to play The game randomly selects a number within a given range (e.g., 1 to 10). Enter your guess int the input box. Click the \u0026ldquo;Guess\u0026rdquo; button to submit your guess. The game will provide feedback: Increment the number of tries and append the guessed number to a list if your guess is not correct. Otherwise, it will be prompt a win message and will restart the game automatically after 3 seconds. Project Structure guess-number/ ├── index.html ├── style.css └── script.js Source Code HTML \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Guess the Number\u0026lt;/title\u0026gt; \u0026lt;link href=\u0026#34;style.css\u0026#34; rel=\u0026#34;stylesheet\u0026#34;\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;title\u0026#34;\u0026gt; \u0026lt;h1\u0026gt;Guess the number!\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;I\u0026#39;m thinking of a number between 1-10\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Can you guess it?\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;input-wrapper\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; id=\u0026#34;guess\u0026#34; /\u0026gt; \u0026lt;input type=\u0026#34;button\u0026#34; value=\u0026#34;Guess\u0026#34; class=\u0026#34;guess-btn\u0026#34; /\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;answer-wrapper\u0026#34;\u0026gt; \u0026lt;p\u0026gt;No. of guesses: \u0026lt;span class=\u0026#34;n-guesses\u0026#34;\u0026gt;0\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Guessed numbers: \u0026lt;span class=\u0026#34;guessed-list\u0026#34;\u0026gt;None\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;result-wrapper\u0026#34;\u0026gt; \u0026lt;p class=\u0026#34;p-result\u0026#34;\u0026gt;Correct! The game will restart in \u0026lt;span class=\u0026#34;timer\u0026#34;\u0026gt;3\u0026lt;/span\u0026gt;s\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;script src=\u0026#34;script.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; CSS @import url(\u0026#39;https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900\u0026amp;display=swap\u0026#39;); *, *:before, *:after { margin: 0; padding: 0; box-sizing: border-box; } html, body { display: flex; justify-content: center; align-items: center; height: 100vh; background-color: #033e97; font-family: \u0026#34;Poppins\u0026#34;, sans-serif; } .container, .title, .input-wrapper, .answer-wrapper, .result-wrapper { display: flex; flex-direction: column; align-items: center; flex-wrap: wrap; } .container { gap: 1.3em; width: 100%; max-width: 31.25em; padding: 2em; box-shadow: 0.4em 0.4em #202020; background-color: #fff; } .title h1 { font-size: 1.5em; margin-bottom: 0.3em; } .title\u0026gt;p { font-size: 1em; } .input-wrapper { gap: 1.2em; } .input-wrapper #guess { width: 70px; height: 70px; border: 2px solid #202020; border-radius: 50%; text-align: center; font-size: 1.3em; outline: none; transition: all .2s ease; } #guess:focus { border-color: #3c6fff; } .input-wrapper .guess-btn { width: 100px; padding: .6em 0; border: none; border-radius: .5em; background-color: #663399; color: #fff; outline: none; cursor: pointer; transition: all .2s ease; } .guess-btn:hover { background-color: #3c6fff; } .answer-wrapper p { word-break: break-all; } .result-wrapper { justify-content: center; width: 100%; height: 35px; } .result-wrapper .p-result { font-size: 0.8em; display: none; } .success { padding: 0 .4em; background-color: #b9ffd5; animation: pop .4s forwards; } @keyframes pop { 0% { transform: scale(0); } 100% { transform: scale(1); } } @keyframes horizontal-shake { 0% { transform: translateX(0) } 25% { transform: translateX(5px) } 50% { transform: translateX(-5px) } 75% { transform: translateX(5px) } 100% { transform: translateX(0) } } .animate { animation: horizontal-shake 0.25s ease-in-out; } JavaScript const userGuess = document.querySelector(\u0026#39;#guess\u0026#39;); const btn = document.querySelector(\u0026#39;.guess-btn\u0026#39;); const par = document.querySelector(\u0026#39;.p-result\u0026#39;); const timer = document.querySelector(\u0026#39;.timer\u0026#39;); const numberOfGuesses = document.querySelector(\u0026#39;.n-guesses\u0026#39;); const guessed = document.querySelector(\u0026#39;.guessed-list\u0026#39;); function randomNumber() { return Math.floor(Math.random() * 10) + 1; } function clearFormatting(array) { array.forEach((element) =\u0026gt; { element.textContent = \u0026#39;\u0026#39;; }); } let number = randomNumber(); let countdownTime = 3; let counterGuesses = 0 clearFormatting([guessed]); btn.addEventListener(\u0026#39;click\u0026#39;, (ev) =\u0026gt; { ev.preventDefault(); userInput = userGuess.value; if (userInput != number) { userGuess.classList.add(\u0026#39;animate\u0026#39;); counterGuesses++; numberOfGuesses.textContent = counterGuesses; guessed.textContent += `${userInput}, `; userGuess.value = \u0026#39;\u0026#39;; } else { par.style.display = \u0026#39;block\u0026#39;; par.classList.add(\u0026#39;success\u0026#39;); const countdownInterval = setInterval(() =\u0026gt; { countdownTime--; timer.textContent = countdownTime; if (countdownTime \u0026lt;= 0) { clearInterval(countdownInterval); par.style.display = \u0026#39;none\u0026#39;; number = randomNumber(); countdownTime = 3; timer.textContent = countdownTime; numberOfGuesses.textContent = \u0026#39;0\u0026#39;; clearFormatting([userGuess, guessed]); par.addEventListener(\u0026#39;animationend\u0026#39;, () =\u0026gt; { par.classList.remove(\u0026#39;success\u0026#39;); }); } }, 1000); } userGuess.addEventListener(\u0026#39;animationend\u0026#39;, () =\u0026gt; { userGuess.classList.remove(\u0026#39;animate\u0026#39;); }); }); ","permalink":"//localhost:1313/projects/guess-number/","summary":"A simple web-based game where the player tries to guess a randomly generated number within a specified range.","title":"Guess the Number Game"},{"content":"Links setInterval() Description This project is a dynamic progress bar implemented using HTML, CSS and JavaScript. The goal of this project is to train how to schedule an execution. For this project I use a function call setInterval. It allows us to run a function repeatedly.\nSource Code HTML \u0026lt;div class=\u0026#34;progress-bar\u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;progress-value\u0026#34;\u0026gt;0\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; CSS *, *::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } body { height: 100vh; display: flex; align-items: center; justify-content: center; } .progress-bar { position: relative; width: 245px; height: 245px; display: flex; align-items: center; justify-content: center; border-radius: 50%; background: conic-gradient(#7d2ae8 0deg, #ededed 0deg); } .progress-bar::before { content: \u0026#34;\u0026#34;; position: absolute; width: 225px; height: 225px; border-radius: 50%; background-color: #fff; } .progress-value { position: relative; font-size: 3rem; font-family: monospace; } JavaScript const progress = document.querySelector(\u0026#39;.progress-bar\u0026#39;) const progressValue = document.querySelector(\u0026#39;.progress-value\u0026#39;) const progressLength = 100 let progressCount = 0 let dist = 0 let intervalId = setInterval(() =\u0026gt; { progressCount++ progressValue.innerText = `${progressCount}%` progress.style.background = `conic-gradient(#7d2ae8 ${progressCount * 3.6}deg, #ededed 0deg)` if (progressCount == progressLength) { progressCount = 0 } }, 50) ","permalink":"//localhost:1313/projects/radial-progress-bar/","summary":"This project involves creating a dynamic progress bar using HTML, CSS, and JavaScript.","title":"Radial Progress Bar"}]